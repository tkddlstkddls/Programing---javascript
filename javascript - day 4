<전역 프로퍼티>

1. Infinity
INfinity 프로퍼티는 양/ 음의 무한대를 나타내는 숫자값 Infinity를 갖는다.

2. NaN
NaN 프로퍼티는 숫자가 아님(Not-a-Number)을 나타내는 숫자값 NaN을 갖는다. NaN 프로퍼티는 Number.NaN 프로퍼티와 같다.

3. undefined
undefined 프로퍼티는 원시 타입 undefined를 값으로 갖는다.

<전역 함수>

1. eval()
매개변수에 전달된 문자열 구문 또는 표현식을 평가 또는 실행한다. 사용자로 부터 입력받은 콘텐츠(untrusted data)를
eval()로 실행하는 것은 보안에 매우 취약하다. eval()의 사용은 가급적으로 금지되어야 한다

2. isFinite()
매개변수에 전달된 값이 정상적인 유한수인지 검사하여 그 결과를 Boolean으로 반환한다. 매개변수에 전달된 값이 숫자가 
아닌 경우, 숫자로 변환한 후 검사를 수행한다.

3. isNaN()
매개변수에 전달된 값이 NaN인지 검사하여 그 결과를 Boolean으로 반환한다. 매개변수에 전달된 값이 숫자가 아닌 경우, 
숫자로 변환한 후 검사를 수행한다.

4. parseFloat()
매개변수에 전달된 문자열을 부동소수점 숫자(floating point number)로 변환하여 반환한다.

5. parseInt()
매개변수에 전달된 문자열을 정수형 숫자(Integer)로 해석(parsing)하여 반환한다. 반환값은 언제나 10진수이다.

6. encodeURI() / decodeURI()
encodeURI()은 매개변수로 전달된 URI(Uniform Resource Identifier)를 인코딩한다.

<Number 레퍼 객체>
1 Number.EPSILON 
Number.EPSILON은 JavaScript에서 표현할 수 있는 가장 작은 수이다. 이는 임의의 수와 그 수보다 큰 수 중 가장
작은 수와의 차이와 같다. Number.EPSILON은 약 2.2204460492503130808472633361816E-16 또는 2-52이다.

2 Number.MAX_VALUE
자바스크립트에서 사용 가능한 가장 큰 숫자(1.7976931348623157e+308)를 반환한다. MAX_VALUE보다 큰 숫자는 Infinity이다.

3 Number.MIN_VALUE
자바스크립트에서 사용 가능한 가장 작은 숫자(5e-324)를 반환한다. MIN_VALUE는 0에 가장 가까운 양수 값이다. MIN_VALUE보다 
작은 숫자는 0으로 변환된다.

4 Number.POSITIVE_INFINITY 
양의 무한대 Infinity를 반환한다.

5 Number.NEGATIVE_INFINITY
음의 무한대 -Infinity를 반환한다.

6 Number.NaN
숫자가 아님(Not-a-Number)을 나타내는 숫자값이다. Number.NaN 프로퍼티는 window.NaN 프로퍼티와 같다.

<number method>
1 Number.isFinite(testValue: number): boolean ES6
매개변수에 전달된 값이 정상적인 유한수인지를 검사하여 그 결과를 Boolean으로 반환한다.

2 Number.isInteger(testValue: number): boolean ES6
매개변수에 전달된 값이 정수(Integer)인지 검사하여 그 결과를 Boolean으로 반환한다. 검사전에 인수를 숫자로 변환하지 않는다.

3 Number.isNaN(testValue: number): boolean ES6
매개변수에 전달된 값이 NaN인지를 검사하여 그 결과를 Boolean으로 반환한다.

4 Number.isSafeInteger(testValue: number): boolean ES6
매개변수에 전달된 값이 안전한(safe) 정수값인지 검사하여 그 결과를 Boolean으로 반환한다. 안전한 정수값은 -(253 - 1)와 253 - 1 사이의 정수값이다. 검사전에 인수를 숫자로 변환하지 않는다.

5 Number.prototype.toFixed(fractionDigits?: number): string ES3
매개변수로 지정된 소숫점자리를 반올림하여 문자열로 반환한다.

7 Number.prototype.toPrecision(precision?: number): string ES3
매개변수로 지정된 전체 자릿수까지 유효하도록 나머지 자릿수를 반올림하여 문자열로 반환한다. 지정된 전체 자릿수로 표현할 수 없는 경우 지수 표기법으로 결과를 반환한다.

8 Number.prototype.toString(radix?: number): string ES1
숫자를 문자열로 변환하여 반환한다.

9 Number.prototype.valueOf(): number
Number 객체의 원시 타입 값(primitive value)을 반환한다.



출쳐 : poiemaweb.com



